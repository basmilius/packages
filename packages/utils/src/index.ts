export type Constructor<T = {}> = new (...args: any[]) => T;
export type Descriptors = Record<string | symbol, TypedPropertyDescriptor<unknown> | PropertyDescriptor>;

export { default as clampWithStepPrecision } from './clampWithStepPrecision';
export { default as countDecimals } from './countDecimals';
export { default as debounce } from './debounce';
export { default as defineStore } from './defineStore';
export { default as downloadBlob } from './downloadBlob';
export { default as downloadString } from './downloadString';
export { default as downloadUrl } from './downloadUrl';
export { default as formatDate } from './formatDate';
export { default as formatDateFull } from './formatDateFull';
export { default as formatDateTime } from './formatDateTime';
export { default as formatMonth } from './formatMonth';
export { default as formatNumber } from './formatNumber';
export { default as formatPercentage } from './formatPercentage';
export { default as formatTime } from './formatTime';
export { default as generateStepTicks } from './generateStepTicks';
export { default as getCircadianPhase, type CircadianPhase } from './getCircadianPhase';
export { default as getDayPeriod, type DayPeriod } from './getDayPeriod';
export { default as getDayPeriodRange } from './getDayPeriodRange';
export { default as getMoonPhase, type MoonPhase } from './getMoonPhase';
export { default as getPrototypeChain } from './getPrototypeChain';
export { default as getSeason, type Season } from './getSeason';
export { default as getSeasonalMood, type SeasonMood } from './getSeasonalMood';
export { default as getWorkdayPeriod, type WorkdayPeriod } from './getWorkdayPeriod';
export { default as getZodiacSign, type ZodiacSign } from './getZodiacSign';
export { default as hexToRGB } from './hexToRGB';
export { default as hslToHSV } from './hslToHSV';
export { default as hslToRGB } from './hslToRGB';
export { default as hsvToHSL } from './hsvToHSL';
export { default as hsvToRGB } from './hsvToRGB';
export { default as hueToRGB } from './hueToRGB';
export { default as isHtmlElement } from './isHtmlElement';
export { default as isNorthernHemisphere } from './isNorthernHemisphere';
export { default as isPointInPolygon } from './isPointInPolygon';
export { default as isToday } from './isToday';
export { default as mulberry32, type Mulberry32 } from './mulberry32';
export { default as openUrl } from './openUrl';
export { default as persistentRef } from './persistentRef';
export { default as persistentStringRef } from './persistentStringRef';
export { default as printHtml } from './printHtml';
export { default as rgbToHEX } from './rgbToHEX';
export { default as rgbToHSL } from './rgbToHSL';
export { default as rgbToHSV } from './rgbToHSV';
export { default as roundStep } from './roundStep';
export { default as setObjectMethod } from './setObjectMethod';
export { default as setObjectValue } from './setObjectValue';
export { default as viewTransition } from './viewTransition';
export { default as waitFor } from './waitFor';

export const CHECK = '✔' as const;
export const CROSS = '✘' as const;
export const MDASH = '—' as const;
export const NDASH = '–' as const;
export const NOOP: Function = () => void 0;
